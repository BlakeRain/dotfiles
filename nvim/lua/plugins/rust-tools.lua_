-- Enable more of the rust-analyzer features (e.g. inlay hints)
-- https://github.com/simrat39/rust-tools.nvim
local M = {
  "simrat39/rust-tools.nvim",
  ft = "rust",
  keys = {
    { "<leader>cRe", "<cmd>RustExpandMacro<cr>", desc = "Expand macro at cursor" },
    { "<leader>cRc", "<cmd>RustOpenCargo<cr>",   desc = "Open Cargo.toml" }
  }
}

local rust_group = vim.api.nvim_create_augroup("RustSettings",
  { clear = true })

function M.config()
  local tools = require("rust-tools")
  local lsp = require("plugins.lsp")

  vim.cmd([[highlight InlayHint ctermfg=14 gui=italic guifg=#333a65]])

  -- Setup the rust language server
  tools.setup({
    tools = {
      -- hover_with_actions = true,
      inlay_hints = {
        auto = true,
        parameter_hints_prefix = "←─ ",
        other_hints_prefix = "─→ ",
        highlight = "InlayHint"
      }
    },
    server = {
      on_attach = lsp.on_attach,
      flags = { debounce_text_changes = 250 },
      capabilities = lsp.get_capabilities(),
      settings = {
        ["rust-analyzer"] = { checkOnSave = { command = "clippy" }, cargo = {
          extraEnv = {
            LLVM_SYS_140_PREFIX = "/opt/homebrew/opt/llvm@14",
            LLVM_SYS_150_PREFIX = "/opt/homebrew/opt/llvm@15",
            LLVM_SYS_160_PREFIX = "/opt/homebrew/opt/llvm@16"
          }
        } }
      }
    }
  })

  -- Tell rust that we want to override the "recommended" style
  vim.g.rust_recommended_style = 0

  -- Create an augroup for Rust that sets the textwidth to 100
  vim.api.nvim_create_autocmd({ "BufRead", "BufNewFile" }, {
    pattern = { "*.rs" },
    group = rust_group,
    callback = function(info)
      -- setlocal tabstop=4 shiftwidth=4 softtabstop=4 expandtab
      vim.api.nvim_set_option_value("textwidth", 99, { buf = info.buf })
      vim.api.nvim_set_option_value("tabstop", 4, { buf = info.buf })
      vim.api.nvim_set_option_value("shiftwidth", 4, { buf = info.buf })
      vim.api.nvim_set_option_value("softtabstop", 4, { buf = info.buf })
      vim.api.nvim_set_option_value("exapndtab", true, { buf = info.buf })
      -- vim.api.nvim_buf_set_option(info.buf, "textwidth", 99)
      -- vim.api.nvim_buf_set_option(info.buf, "tabstop", 4)
      -- vim.api.nvim_buf_set_option(info.buf, "shiftwidth", 4)
      -- vim.api.nvim_buf_set_option(info.buf, "softtabstop", 4)
      -- vim.api.nvim_buf_set_option(info.buf, "expandtab", true)
    end
  })

  -- vim.api.nvim_create_autocmd({ "BufWritePre" }, {
  --   pattern = { "*.rs" },
  --   group = rust_group,
  --   callback = function(info)
  --     -- vim.lsp.buf.formatting_sync({ bufnr = info.buf })
  --     vim.lsp.buf.format({ bufnr = info.buf, async = false })
  --   end
  -- })
end

return M
